{"ast":null,"code":"// import * as actions from '../actions/general.act';\n// import * as Functions from '../common/functions/functions';\n// const axios = require('axios');\nexport default (function (store) {\n  return function (next) {\n    return function (action) {\n      if (action.type == 'API') {// const SERVER_ENDPOINT = \"http://localhost:3000/moviesList\";\n        // const OMDb_API = 'https://www.omdbapi.com/?apikey=81d51a00';\n        // let { type, method, index, newData, newDatas, id, currentDb } = action.payload;\n        // let api = {\n        //     'get': (data) => {\n        //         // axios.get(SERVER_ENDPOINT).then((res) => {\n        //         store.dispatch(actions.api(type, data))\n        //         // })\n        //         // .catch((err) => console.log(err))\n        //     },\n        //     'post': (newMovie) => {\n        //         // axios.post((SERVER_ENDPOINT), newMovie).then((res) => {\n        //         store.dispatch(actions.api(type, newMovie))\n        //         // })\n        //         // .catch((err) => console.log(err))\n        //     },\n        //     'put': () => {\n        //         // axios.put((SERVER_ENDPOINT + '/' + index + '/'), newData).then((res) => {\n        //         store.dispatch(actions.api(type, newDatas))\n        //         // })\n        //         // .catch((err) => console.log(err))\n        //     },\n        //     'delete': () => {\n        //         // axios.delete(SERVER_ENDPOINT + '/' + index + '/').then((res) => {\n        //         store.dispatch(actions.api(type, newDatas))\n        //         // })\n        //         // .catch((err) => console.log(err))\n        //     }\n        // }\n        // if (type == 'ADD') {\n        //     let title = newData.title.replace(' ', '+');\n        //     axios.get(OMDb_API + '&t=' + title + '&y=' + newData.year).then((respone) => {\n        //         if (!respone.data.respone) {\n        //             return;\n        //         }\n        //         let newMovie = respone.data;\n        //         newMovie['id'] = id;\n        //         if (!Functions.isMovieExist(currentDb, newMovie.imdbID)) {\n        //             api[method](newMovie);\n        //             store.dispatch(actions.isMovieExist(false))\n        //         }\n        //         else {\n        //             store.dispatch(actions.isMovieExist(true))\n        //         }\n        //     })\n        //         .catch((err) => console.log(err))\n        // }\n        // else {\n        //     api[method]();\n        // }\n      }\n\n      return next(action);\n    };\n  };\n});","map":{"version":3,"sources":["C:\\Users\\shalombar\\Desktop\\codeValueTest\\initialize_react_redux_app\\src\\middleware\\general.mid.js"],"names":["store","next","action","type"],"mappings":"AAAA;AACA;AAEA;AAEA,gBAAe,UAAAA,KAAK;AAAA,SAAI,UAAAC,IAAI;AAAA,WAAI,UAAAC,MAAM,EAAI;AACtC,UAAIA,MAAM,CAACC,IAAP,IAAe,KAAnB,EAA0B,CACtB;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AACD,aAAOF,IAAI,CAACC,MAAD,CAAX;AACH,KA5D2B;AAAA,GAAR;AAAA,CAApB","sourcesContent":["// import * as actions from '../actions/general.act';\r\n// import * as Functions from '../common/functions/functions';\r\n\r\n// const axios = require('axios');\r\n\r\nexport default store => next => action => {\r\n    if (action.type == 'API') {\r\n        // const SERVER_ENDPOINT = \"http://localhost:3000/moviesList\";\r\n        // const OMDb_API = 'https://www.omdbapi.com/?apikey=81d51a00';\r\n\r\n        // let { type, method, index, newData, newDatas, id, currentDb } = action.payload;\r\n\r\n        // let api = {\r\n        //     'get': (data) => {\r\n        //         // axios.get(SERVER_ENDPOINT).then((res) => {\r\n        //         store.dispatch(actions.api(type, data))\r\n        //         // })\r\n        //         // .catch((err) => console.log(err))\r\n        //     },\r\n        //     'post': (newMovie) => {\r\n        //         // axios.post((SERVER_ENDPOINT), newMovie).then((res) => {\r\n        //         store.dispatch(actions.api(type, newMovie))\r\n        //         // })\r\n        //         // .catch((err) => console.log(err))\r\n        //     },\r\n        //     'put': () => {\r\n        //         // axios.put((SERVER_ENDPOINT + '/' + index + '/'), newData).then((res) => {\r\n        //         store.dispatch(actions.api(type, newDatas))\r\n        //         // })\r\n        //         // .catch((err) => console.log(err))\r\n        //     },\r\n        //     'delete': () => {\r\n        //         // axios.delete(SERVER_ENDPOINT + '/' + index + '/').then((res) => {\r\n        //         store.dispatch(actions.api(type, newDatas))\r\n        //         // })\r\n        //         // .catch((err) => console.log(err))\r\n        //     }\r\n        // }\r\n\r\n        // if (type == 'ADD') {\r\n        //     let title = newData.title.replace(' ', '+');\r\n\r\n        //     axios.get(OMDb_API + '&t=' + title + '&y=' + newData.year).then((respone) => {\r\n        //         if (!respone.data.respone) {\r\n        //             return;\r\n        //         }\r\n\r\n        //         let newMovie = respone.data;\r\n\r\n        //         newMovie['id'] = id;\r\n        //         if (!Functions.isMovieExist(currentDb, newMovie.imdbID)) {\r\n        //             api[method](newMovie);\r\n        //             store.dispatch(actions.isMovieExist(false))\r\n        //         }\r\n        //         else {\r\n        //             store.dispatch(actions.isMovieExist(true))\r\n        //         }\r\n        //     })\r\n        //         .catch((err) => console.log(err))\r\n        // }\r\n        // else {\r\n        //     api[method]();\r\n        // }\r\n    }\r\n    return next(action)\r\n}"]},"metadata":{},"sourceType":"module"}