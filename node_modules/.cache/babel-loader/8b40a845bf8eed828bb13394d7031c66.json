{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\codeValueTest\\\\initialize_react_redux_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\codeValueTest\\\\initialize_react_redux_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\codeValueTest\\\\initialize_react_redux_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\codeValueTest\\\\initialize_react_redux_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\codeValueTest\\\\initialize_react_redux_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\codeValueTest\\\\initialize_react_redux_app\\\\src\\\\components\\\\addProduct\\\\AddProduct.js\";\nimport React, { Component } from 'react';\nimport * as Functions from '../../common/functions/functions';\n\nvar AddProduct =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddProduct, _Component);\n\n  function AddProduct(props) {\n    var _this;\n\n    _classCallCheck(this, AddProduct);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddProduct).call(this, props));\n    _this.state = {\n      Name: '',\n      Description: '',\n      Price: '',\n      inputsValidation: {\n        'Name': true,\n        'Description': true,\n        'Price': true\n      },\n      isValid: true,\n      isProductExist: false\n    };\n    return _this;\n  }\n\n  _createClass(AddProduct, [{\n    key: \"_add\",\n    value: function _add() {\n      var addFormData = {\n        Name: this.state.Name,\n        Description: this.state.Description,\n        Price: this.state.Price\n      };\n\n      var id = this._generateProductId();\n\n      this.props.isProductExist(false);\n      this.props.addProduct(this.props.general.products, addFormData, id);\n      this.setState({\n        title: '',\n        year: ''\n      });\n    }\n  }, {\n    key: \"_generateProductId\",\n    value: function _generateProductId() {\n      var id = Math.floor(Math.random() * 1000 + 1);\n\n      while (this._isIdExist(id)) {\n        id = Math.floor(Math.random() * 1000 + 1);\n      }\n\n      return id;\n    }\n  }, {\n    key: \"_isIdExist\",\n    value: function _isIdExist(id) {\n      var products = this.props.general.products;\n\n      for (var i = 0; i < products.length; ++i) {\n        var product = products[i];\n\n        if (product.id == id) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_validation\",\n    value: function _validation(inputCheck) {\n      var validationObj = {\n        'Price': function Price(val) {\n          if (val != '') {\n            return Functions.isNum(val);\n          }\n\n          return {\n            status: 'ok'\n          };\n        },\n        'Name': function Name(val) {\n          if (val != '') {\n            return Functions.nameValidation(val);\n          }\n\n          return {\n            status: 'ok'\n          };\n        },\n        'Description': function Description(val) {\n          return {\n            status: 'ok'\n          };\n        }\n      };\n      var InputValidation = validationObj[inputCheck](this.refs[inputCheck].value);\n      var inputsValidation = this.state.inputsValidation;\n\n      if (InputValidation.status == 'error') {\n        this.refs[inputCheck].classList.add('invalid');\n        inputsValidation[inputCheck] = false;\n        this.setState({\n          isValid: false,\n          inputsValidation: inputsValidation\n        });\n      } else if (InputValidation.status == 'ok') {\n        if (this.refs[inputCheck].className.includes('invalid')) {\n          this.refs[inputCheck].classList.remove('invalid');\n          inputsValidation[inputCheck] = true;\n          this.setState({\n            isValid: true,\n            inputsValidation: inputsValidation\n          });\n        }\n      }\n    }\n  }, {\n    key: \"_isProductExist\",\n    value: function _isProductExist(Name) {\n      if (Functions.isProductExistByTitle(this.props.general.products, Name)) {\n        this.setState({\n          isProductExist: true\n        });\n      } else {\n        if (this.state.isProductExist) {\n          this.setState({\n            isProductExist: false\n          });\n          this.props.isProductExist(false);\n        }\n      }\n    }\n  }, {\n    key: \"_renderButtons\",\n    value: function _renderButtons() {\n      var _this2 = this;\n\n      try {\n        return React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"btnContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#add\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"Add New Product\"))), React.createElement(\"div\", {\n          className: \"modal\",\n          id: \"add\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"modal-dialog\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"modal-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"modal-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          className: \"modal-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \"Add New Product \"), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"close\",\n          \"data-dismiss\": \"modal\",\n          onClick: function onClick() {\n            return _this2.props.isProductExist(false);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"\\xD7\")), React.createElement(\"div\", {\n          className: \"modal-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, 'Name: ', \" \"), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"Name\",\n          value: this.state.Name,\n          ref: \"Name\",\n          onChange: function onChange(e) {\n            _this2.setState({\n              'Name': _this2.refs.Name.value\n            });\n\n            _this2._isProductExist(_this2.refs.Name.value);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }), !this.state.inputsValidation['title'] && React.createElement(\"span\", {\n          className: \"error-message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"Oops! Input invalid!\")), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, 'Description: ', \" \"), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"Description\",\n          value: this.state.Description,\n          ref: \"Description\",\n          onChange: function onChange(e) {\n            _this2._validation('Description');\n\n            _this2.setState({\n              'Description': _this2.refs.Description.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }), !this.state.inputsValidation['Description'] && React.createElement(\"span\", {\n          className: \"error-message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"Oops! Input invalid!\")), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, 'Price: ', \" \"), React.createElement(\"input\", {\n          type: \"text\",\n          name: \"Price\",\n          value: this.state.Price,\n          ref: \"Price\",\n          onChange: function onChange(e) {\n            _this2._validation('Price');\n\n            _this2.setState({\n              'Price': _this2.refs.Price.value\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }), !this.state.inputsValidation['Price'] && React.createElement(\"span\", {\n          className: \"error-message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \"Oops! Input invalid!\"))), React.createElement(\"div\", {\n          className: \"modal-footer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          \"data-dismiss\": this.state.isValid && !this.props.general.isProductExist && !this.state.isProductExist ? \"modal\" : '',\n          onClick: function onClick() {\n            if (_this2.state.isValid) {\n              _this2._add(_this2.props.index);\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, \"Add\"), React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          \"data-dismiss\": \"modal\",\n          onClick: function onClick() {\n            return _this2.props.isProductExist(false);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, \"Close\")), this.props.general.isMovieExist && React.createElement(\"span\", {\n          className: \"error-message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"Oops! This Movie Is Exist!\")))));\n      } catch (err) {}\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this._renderButtons();\n    }\n  }]);\n\n  return AddProduct;\n}(Component);\n\nexport default AddProduct;","map":{"version":3,"sources":["C:\\Users\\shalombar\\Desktop\\codeValueTest\\initialize_react_redux_app\\src\\components\\addProduct\\AddProduct.js"],"names":["React","Component","Functions","AddProduct","props","state","Name","Description","Price","inputsValidation","isValid","isProductExist","addFormData","id","_generateProductId","addProduct","general","products","setState","title","year","Math","floor","random","_isIdExist","i","length","product","inputCheck","validationObj","val","isNum","status","nameValidation","InputValidation","refs","value","classList","add","className","includes","remove","isProductExistByTitle","e","_isProductExist","_validation","_add","index","isMovieExist","err","_renderButtons"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport * as Functions from '../../common/functions/functions';\r\n\r\nclass AddProduct extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Name: '',\r\n            Description: '',\r\n            Price: '',\r\n            inputsValidation: { 'Name': true, 'Description': true, 'Price': true },\r\n            isValid: true,\r\n            isProductExist: false\r\n        }\r\n    }\r\n\r\n    _add() {\r\n        let addFormData = {\r\n            Name: this.state.Name,\r\n            Description: this.state.Description,\r\n            Price: this.state.Price\r\n        }\r\n\r\n        let id = this._generateProductId();\r\n\r\n        this.props.isProductExist(false)\r\n\r\n        this.props.addProduct(this.props.general.products, addFormData, id);\r\n\r\n        this.setState({ title: '', year: '' })\r\n\r\n    }\r\n\r\n    _generateProductId() {\r\n        let id = Math.floor((Math.random() * 1000) + 1);\r\n\r\n        while (this._isIdExist(id)) {\r\n            id = Math.floor((Math.random() * 1000) + 1);\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    _isIdExist(id) {\r\n        let { products } = this.props.general;\r\n\r\n        for (var i = 0; i < products.length; ++i) {\r\n            let product = products[i];\r\n\r\n            if (product.id == id) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _validation(inputCheck) {\r\n        let validationObj = {\r\n            'Price': (val) => {\r\n                if (val != '') {\r\n                    return Functions.isNum(val);\r\n                }\r\n                return { status: 'ok' }\r\n            },\r\n            'Name': (val) => {\r\n                if (val != '') {\r\n                    return Functions.nameValidation(val);\r\n                }\r\n                return { status: 'ok' }\r\n            },\r\n            'Description': (val) => {\r\n                return { status: 'ok' };\r\n            }\r\n        }\r\n\r\n        let InputValidation = validationObj[inputCheck](this.refs[inputCheck].value);\r\n        let { inputsValidation } = this.state;\r\n\r\n        if (InputValidation.status == 'error') {\r\n            this.refs[inputCheck].classList.add('invalid');\r\n            inputsValidation[inputCheck] = false;\r\n            this.setState({ isValid: false, inputsValidation });\r\n        }\r\n        else if (InputValidation.status == 'ok') {\r\n            if (this.refs[inputCheck].className.includes('invalid')) {\r\n                this.refs[inputCheck].classList.remove('invalid');\r\n                inputsValidation[inputCheck] = true;\r\n                this.setState({ isValid: true, inputsValidation })\r\n            }\r\n        }\r\n    }\r\n\r\n    _isProductExist(Name) {\r\n        if (Functions.isProductExistByTitle(this.props.general.products, Name)) {\r\n            this.setState({ isProductExist: true })\r\n        }\r\n        else {\r\n            if (this.state.isProductExist) {\r\n                this.setState({ isProductExist: false })\r\n                this.props.isProductExist(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    _renderButtons() {\r\n        try {\r\n            return (\r\n                <div className=\"container\">\r\n                    {/* Button to Open the Modal  */}\r\n                    <div className=\"btnContainer\">\r\n                        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#add\" ><span>Add New Product</span></button>\r\n                    </div >\r\n\r\n                    {/* The add Modal  */}\r\n                    <div className=\"modal\" id=\"add\">\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n\r\n                                {/* Modal Header */}\r\n                                <div className=\"modal-header\">\r\n                                    <h4 className=\"modal-title\">Add New Product </h4>\r\n                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={() => this.props.isProductExist(false)}>&times;</button>\r\n                                </div>\r\n\r\n                                {/* Modal body  */}\r\n                                <div className=\"modal-body\">\r\n                                    <div><span>{'Name: '} </span><input type=\"text\" name=\"Name\" value={this.state.Name} ref='Name' onChange={(e) => { this.setState({ 'Name': this.refs.Name.value }); this._isProductExist(this.refs.Name.value) }}></input>{!this.state.inputsValidation['title'] && <span className=\"error-message\">Oops! Input invalid!</span>}</div>\r\n                                    <div><span>{'Description: '} </span><input type=\"text\" name=\"Description\" value={this.state.Description} ref='Description' onChange={(e) => { this._validation('Description'); this.setState({ 'Description': this.refs.Description.value }); }}></input>{!this.state.inputsValidation['Description'] && <span className=\"error-message\">Oops! Input invalid!</span>}</div>\r\n                                    <div><span>{'Price: '} </span><input type=\"text\" name=\"Price\" value={this.state.Price} ref='Price' onChange={(e) => { this._validation('Price'); this.setState({ 'Price': this.refs.Price.value }); }}></input>{!this.state.inputsValidation['Price'] && <span className=\"error-message\">Oops! Input invalid!</span>}</div>\r\n                                </div>\r\n\r\n                                {/* Modal footer  */}\r\n                                <div className=\"modal-footer\">\r\n                                    {/* <button type=\"button\" className=\"btn btn-danger\" data-dismiss={()=>this.state.isValid && !this.props.general.isMovieExist && !Functions.isMovieExistByTitle(this.props.general.moviesList, this.state.title) ? \"modal\" : ''} onClick={() => { if (this.state.isValid) { this._add(this.props.index) } }}>Add</button> */}\r\n                                    <button type=\"button\" className=\"btn btn-danger\" data-dismiss={this.state.isValid && !this.props.general.isProductExist && !this.state.isProductExist ? \"modal\" : ''} onClick={() => { if (this.state.isValid) { this._add(this.props.index) } }}>Add</button>\r\n                                    <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={() => this.props.isProductExist(false)}>Close</button>\r\n                                </div>\r\n                                {this.props.general.isMovieExist && <span className=\"error-message\">Oops! This Movie Is Exist!</span>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        catch (err) { }\r\n    }\r\n\r\n    render() {\r\n        return this._renderButtons()\r\n    }\r\n}\r\n\r\nexport default (AddProduct);\r\n\r\n"]},"metadata":{},"sourceType":"module"}