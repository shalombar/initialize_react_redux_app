{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\shalombar\\\\Desktop\\\\codeValueTest\\\\initialize_react_redux_app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  state = _objectSpread({\n    test: 'i am redux test',\n    products: [],\n    productSelected: null,\n    isProductExist: false\n  }, state);\n\n  switch (action.type) {\n    case 'GET_PRODUCTS_LIST':\n      var products = action.payload;\n      return _objectSpread({}, state, {\n        products: products\n      });\n\n    case 'SET_PRODUCT_SELECTED':\n      var productSelected = action.payload;\n      return _objectSpread({}, state, {\n        productSelected: productSelected\n      });\n\n    case 'UPDATE':\n      var newDatas = action.payload;\n      return _objectSpread({}, state, {\n        products: newDatas\n      });\n\n    case 'ADD':\n      var currnetProductsList = state.products;\n      var addData = action.payload;\n      currnetProductsList.push(addData);\n      return _objectSpread({}, state, {\n        products: currnetProductsList\n      });\n\n    case 'IS_PRODUCT_EXIST':\n      var isProductExist = action.payload;\n      return _objectSpread({}, state, {\n        isProductExist: isProductExist\n      });\n\n    default:\n      return state;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["C:\\Users\\shalombar\\Desktop\\codeValueTest\\initialize_react_redux_app\\src\\reducers\\general.red.js"],"names":["state","action","test","products","productSelected","isProductExist","type","payload","newDatas","currnetProductsList","addData","push"],"mappings":";AAAA,gBAAe,YAAwB;AAAA,MAAvBA,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AACnCD,EAAAA,KAAK;AACDE,IAAAA,IAAI,EAAE,iBADL;AAEDC,IAAAA,QAAQ,EAAE,EAFT;AAGDC,IAAAA,eAAe,EAAE,IAHhB;AAIDC,IAAAA,cAAc,EAAE;AAJf,KAKEL,KALF,CAAL;;AAOA,UAAQC,MAAM,CAACK,IAAf;AACI,SAAK,mBAAL;AACI,UAAIH,QAAQ,GAAGF,MAAM,CAACM,OAAtB;AAEA,+BACOP,KADP;AAEIG,QAAAA,QAAQ,EAAEA;AAFd;;AAIJ,SAAK,sBAAL;AACI,UAAIC,eAAe,GAAGH,MAAM,CAACM,OAA7B;AAEA,+BACOP,KADP;AAEII,QAAAA,eAAe,EAAEA;AAFrB;;AAIJ,SAAK,QAAL;AACI,UAAII,QAAQ,GAAGP,MAAM,CAACM,OAAtB;AAEA,+BACOP,KADP;AAEIG,QAAAA,QAAQ,EAAEK;AAFd;;AAIJ,SAAK,KAAL;AACI,UAAIC,mBAAmB,GAAGT,KAAK,CAACG,QAAhC;AACA,UAAIO,OAAO,GAAGT,MAAM,CAACM,OAArB;AAEAE,MAAAA,mBAAmB,CAACE,IAApB,CAAyBD,OAAzB;AAEA,+BACOV,KADP;AAEIG,QAAAA,QAAQ,EAAEM;AAFd;;AAIJ,SAAK,kBAAL;AACI,UAAIJ,cAAc,GAAGJ,MAAM,CAACM,OAA5B;AAEA,+BACOP,KADP;AAEIK,QAAAA,cAAc,EAAEA;AAFpB;;AAKJ;AACI,aAAOL,KAAP;AAzCR;;AA2CA,SAAOA,KAAP;AACH,CApDD","sourcesContent":["export default (state = {}, action) => {\r\n    state = {\r\n        test: 'i am redux test',\r\n        products: [],\r\n        productSelected: null,\r\n        isProductExist: false,\r\n        ...state\r\n    }\r\n    switch (action.type) {\r\n        case 'GET_PRODUCTS_LIST':\r\n            let products = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                products: products\r\n            }\r\n        case 'SET_PRODUCT_SELECTED':\r\n            let productSelected = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                productSelected: productSelected\r\n            }\r\n        case 'UPDATE':\r\n            let newDatas = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                products: newDatas\r\n            }\r\n        case 'ADD':\r\n            let currnetProductsList = state.products;\r\n            let addData = action.payload;\r\n\r\n            currnetProductsList.push(addData);\r\n\r\n            return {\r\n                ...state,\r\n                products: currnetProductsList\r\n            }\r\n        case 'IS_PRODUCT_EXIST':\r\n            let isProductExist = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                isProductExist: isProductExist\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n    return state;\r\n}"]},"metadata":{},"sourceType":"module"}